DROP ALL OBJECTS;

CREATE TABLE IF NOT EXISTS users (
	id              INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	email           varchar(127),
	name            varchar(127),
	login           varchar(127),
	birthday        date
);

CREATE UNIQUE INDEX IF NOT EXISTS USER_EMAIL_INDEX on users(email);
CREATE UNIQUE INDEX IF NOT EXISTS USER_LOGIN_INDEX on users(login);

CREATE TABLE IF NOT EXISTS friendship_request (
	sender_id       int REFERENCES users(id),
	receiver_id     int REFERENCES users(id),
	accepted        boolean DEFAULT false, --оставлю на будущее, если придется реализовать систему подписок
	CONSTRAINT      uq_friendship UNIQUE (sender_id, receiver_id)
);

CREATE TABLE IF NOT EXISTS rating (
	id              INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	name            varchar(15),
	description     varchar(127)
);

CREATE TABLE IF NOT EXISTS films (
	id              INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	name            varchar(127),
	description     text,
	release_date    date,
	rating_id       int REFERENCES rating(id),
	duration        bigint
);

CREATE TABLE IF NOT EXISTS user_film_likes (
	user_id         int REFERENCES users(id),
	film_id         int REFERENCES films(id)
);

CREATE TABLE IF NOT EXISTS genre (
	id              INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	name            varchar(63)
);

CREATE TABLE IF NOT EXISTS film_genre (
	film_id         int REFERENCES films(id),
	genre_id        int REFERENCES genre(id)
);